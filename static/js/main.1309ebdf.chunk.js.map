{"version":3,"sources":["img/cwlogo.png","Context/State.js","Context/Types.js","Panel/index.js","Axios/index.js","Util/util.js","Util/index.js","MainPanel/TimeSheet/TimeSheetOptions/index.js","MainPanel/TimeSheet/Toogle/index.js","MainPanel/TimeSheet/CSV/index.js","MainPanel/TimeSheet/index.js","MainPanel/Confirmation/index.js","MainPanel/Error/index.js","MainPanel/Warning/index.js","DateTimeWeather/index.js","MainPanel/index.js","EmployeePanel/EmployeePanelButtons/index.js","EmployeePanel/index.js","LogInForm/index.js","Context/InitialState.js","Context/StateFunctions.js","Context/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TimeSheetContext","createContext","SET_SELECTED_ITEMS","SET_EMPLOYEES","SET_LABOR_TYPES","SET_JOB_NUMBERS","CREATE_EMPLOYEE","CREATE_LABOR_TYPE","CREATE_JOB_NUMBER","BULK_DELETE","CLOCK_IN","CLOCK_OUT","GO_TO_LUNCH","BACK_FROM_LUNCH","BULK_DEACTIVATE","BULK_ACTIVATE","UPDATE_EMPLOYEE","TOGGLE_ADMIN_MODE","OPEN_MESSAGE","CLOSE_MESSAGE","TOGGLE_DOWNLOAD_SCREEN","TOGGLE_IS_CONTRACTOR","TOGGLE_IS_TECH","CLEAR_CSV_DATA","GET_CSV_DATA","SET_CSV_DATA","LOG_IN","Panel","useContext","dispatch","isAdminMode","useState","selected","icons","icon","id","fn","type","Types","payload","className","map","data","index","key","onClick","style","marginTop","baseURL","getHeaderObj","window","localStorage","length","JSON","parse","headers","token","get","path","params","a","axios","then","response","catch","error","console","log","post","obj","errorFn","put","delete","seed","c","tt","t","forEach","isActive","isContractor","jobTitle","name","travelTime","number","clockIn","url","startLunch","stringify","endLunch","clockOut","reset","fetchEmployees","updateEmployee","laborType","jobNumber","updates","fetchLaborTypes","fetchJobNumbers","getCsvData","startDate","endDate","moment","format","message","logIn","username","password","getWeather","string","breakRefAndCopy","getTime","field","utc","local","getHeader","clockInTime","clockOutTime","date","lunchTime","totalHrs","overTime","getTimeFromString","time","getLaborType","state","selectedItems","laborTypes","employees","getJobNumber","jobNumbers","formatCSVData","csvData","usedData","util","createdAt","updatedAt","end","start","totalHoursWorked","timeArray","split","parseInt","timeInHours","diff","parseFloat","toFixed","Object","keys","head","push","innerData","i","getDefaultLaborType","isTech","getDefaultJobNumber","TimeSheetOptions","props","title","options","route","selectedItemType","selectItem","Util","selectedIds","includes","indexOf","splice","inputValue","setInputValue","activeButtons","deactivatedButtons","placeholder","value","fontWeight","onChange","e","target","onKeyPress","trim","Axios","toUpperCase","adminClass","isSelected","Toogle","isOn","offStlyes","onStlyes","parentStlyes","text","textStlyes","Date","setStartDate","setEndDate","styles","parent","height","width","position","container","display","justifyContent","alignItems","backgroundColor","textAlign","color","fontSize","margin","marginBottom","button","maxDate","selectsStart","selectsEnd","minDate","class","textDecoration","filename","top","left","flexDirection","borderRadius","TimeSheet","jobNumberSearch","setJobNumberSearch","useEffect","isAdminLoggedIn","isDownloadScreen","topButtons","isVisable","hasEmployeeSelected","hasLaborTypeSelected","hasJobNumberSelected","function","isEmployeeSelected","isLaborTypeSelected","isJobNuumberSelected","isAlreadyClockedIn","toggleButton","right","opacity","isTechSelected","isContractorSelected","bottom","CSV","transition","padding","Confirmation","fadeStlye","setFadeStlye","confirmation","setTimeout","Error","confirmBox","Warning","warning","yes","DateTimeWeather","setTime","temp","setTemp","setInterval","K","list","main","MainPanel","status","EmployeePanelButtons","editEmployee","employee","isDeactivated","selectedEmployee","selectedEmployees","addJobNumber","emptyJobNumber","addLaborTypes","emptyLaborTypes","click","newSelectedItems","jobNumberIndex","laborTypeIndex","removeEmployee","iconClass","input","border","EmployeePanel","fullName","setFullName","setJobTitle","setTravelTime","isEditing","setIsEditing","resetInputs","submit","buttonSubmit","enterKeyOrSubmitButtonPressed","fieldsEmpty","err","src","logo","marginLeft","marginRight","LogInForm","setUsername","setPassword","isLoggedIn","submitForm","initialState","employeesId","currentState","clickedTypes","newMessage","isAdmin","setItem","action","table","StateFunctions","App","useReducer","Reducer","Provider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1309ebdf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cwlogo.b6e789da.png\";","import { createContext } from \"react\";\nconst TimeSheetContext = createContext({});\n\nexport default TimeSheetContext;\n","export default {\n  // SET\n  SET_SELECTED_ITEMS: \"SET_SELECTED_ITEMS\",\n  SET_EMPLOYEES: \"SET_EMPLOYEES\",\n  SET_LABOR_TYPES: \"SET_LABOR_TYPES\",\n  SET_JOB_NUMBERS: \"SET_JOB_NUMBERS\",\n\n  // CREATE\n  CREATE_EMPLOYEE: \"CREATE_EMPLOYEE\",\n  CREATE_LABOR_TYPE: \"CREATE_LABOR_TYPE\",\n  CREATE_JOB_NUMBER: \"CREATE_JOB_NUMBER\",\n\n\n  // DELETE\n  BULK_DELETE: \"BULK_DELETE\",\n\n\n\n  CLOCK_IN: \"CLOCK_IN\",\n  CLOCK_OUT: \"CLOCK_OUT\",\n  GO_TO_LUNCH: \"GO_TO_LUNCH\",\n  BACK_FROM_LUNCH: \"BACK_FROM_LUNCH\",\n  BULK_DEACTIVATE: \"BULK_DEACTIVATE\",\n  BULK_ACTIVATE: \"BULK_ACTIVATE\",\n  UPDATE_EMPLOYEE: \"UPDATE_EMPLOYEE\",\n  TOGGLE_ADMIN_MODE: \"TOGGLE_ADMIN_MODE\",\n  OPEN_MESSAGE: \"OPEN_MESSAGE\",\n  CLOSE_MESSAGE: \"CLOSE_MESSAGE\",\n  TOGGLE_DOWNLOAD_SCREEN: \"TOGGLE_DOWNLOAD_SCREEN\",\n  TOGGLE_IS_CONTRACTOR: \"TOGGLE_IS_CONTRACTOR\",\n  TOGGLE_IS_TECH: \"TOGGLE_IS_TECH\",\n  CLEAR_CSV_DATA: \"CLEAR_CSV_DATA\",\n  GET_CSV_DATA: \"GET_CSV_DATA\",\n  SET_CSV_DATA: \"SET_CSV_DATA\",\n  LOG_IN: \"LOG_IN\"\n\n}\n","import React, { useState, useContext } from 'react';\nimport TimeSheetContext from \"../Context/State\";\n\nimport Types from \"../Context/Types\";\n\nimport './Panel.css';\n\nfunction Panel() {\n\n  const {\n    dispatch,\n    isAdminMode\n  } = useContext(TimeSheetContext);\n\n  const [selected, setSelected] = useState(\"clock\");\n\n  const hasSelected = (id) => {\n    return id === selected\n  }\n\n  const icons = [\n    {\n      icon: \"fas fa-clock\",\n      id: \"clock\",\n      fn: () => {}\n    },\n    {\n      icon: \"fas fa-cloud-download-alt\",\n      id: \"download\",\n      fn: () => {\n        dispatch({\n          type: Types.TOGGLE_DOWNLOAD_SCREEN,\n          payload: true\n        })\n      }\n    }\n  ];\n\n\n  return (<div id=\"leftPanel\" className=\"flex\">\n    <div id=\"leftPanelLiner\" className=\"flex\">\n      {icons.map((data, index) => {\n        return (<div\n          key={index}\n          className={`iconContainer flex ${hasSelected(data.id) && \"selected\"}`}\n          onClick={data.fn}\n          style={{ marginTop: \"5em\" }}>\n          <i className={`${data.icon} sideIcon`}></i>\n        </div>)})}\n    </div>\n  </div>);\n}\n\nexport default Panel;\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport Types from \"../Context/Types.js\";\n\nconst baseURL = \"https://dashboard-api-02.herokuapp.com/api\";\n\nconst getHeaderObj = () => {\n  const data = window.localStorage.length ? JSON.parse(window.localStorage.data) : {};\n  const token = data && data.token || {};\n  return {\n    headers: {\n      'auth-token': token\n    }\n  }\n}\n\nexport default {\n  get: async (path, params, fn) => {\n    await axios.get(path, { params })\n      .then(response => { fn && fn(response) })\n      .catch(error => console.log(error));\n  },\n  post: async (path, obj, fn, errorFn) => {\n    await axios.post(path, obj)\n      .then(response => { fn && fn(response) })\n      .catch(error => {\n        console.log(error);\n        if(errorFn) errorFn(error)\n      });\n  },\n  put: async (path, obj, fn) => {\n    await axios.put(path, obj)\n      .then(response => { fn && fn(response) })\n      .catch(error => console.log(error));\n  },\n  delete: async (path, obj, fn) => {\n    await axios.delete(path, obj)\n      .then(response => { fn && fn(response) })\n      .catch(error => console.log(error));\n  },\n  seed: () => {\n    const c = [false, false, false, false, false, false, false, false, false, false, false, false, true, true];\n    const tt = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2];\n    const e = [\"MIKE KOWAL\", \"RYAN MCWILLIAMS\", \"JOSEPH NEES\", \"BILL CROISSETTE, JR.\", \"PAUL WICK\", \"PAUL BEMENT\", \"MARK SCHOONOVER\", \"BEN VEHABOVIC\", \"SHAWN SAVITZ\", \"CRAIG FULLER\", \"COURTNEY JOHNSON\", \"MICHAEL CLUCAS\", \"LISA THOMAS\", \"AMBER\", \"BILL CROISSETTE\", \"JAKE SHELLHAMMER\"];\n    const t = [\"SHOP MANAGER\", \"MECHANIC/TECH\", \"DEPARTMENT MANAGER\", \"PROJECT MANAGER\", \"APPLICATION ENGINEER\", \"DESIGN\", \"PROJECT MANAGER\", \"PROJECT MANAGER AND PRODUCTION PLANNER\", \"OFFICE ADMINISTRATION\", \"SHIPPER/RECEIVER\", \"WELDER\"];\n    const j = [\"35000123\", \"35000234\", \"35000345\", \"35000456\", \"35000567\", \"35000678\", \"35000789\", \"35000891\", \"35000912\", \"35000321\", \"Other\"];\n    const l = [\"BASE\", \"CRATE\", \"DP SWITCH\", \"ADDER: FLEX HOUSE\", \"PIPPING ASSEMBLY\", \"ADDER: PUMPS\", \"PAINT\", \"REWORK\", \"TEST\", \"OTHER\"];\n\n    e.forEach((data, index) => {\n      axios.post(`${baseURL}/employees`, {\n        isActive: true,\n        isContractor: c[index],\n        jobTitle: t[index],\n        name: data,\n        travelTime: tt[index]\n      }, getHeaderObj())\n    })\n    j.forEach((data, index) => {\n      axios.post(`${baseURL}/jobs`, {\n        number: data,\n        isActive: true\n      }, getHeaderObj())\n    })\n    l.forEach((data, index) => {\n      axios.post(`${baseURL}/laborTypes`, {\n        name: data,\n        isActive: true\n      }, getHeaderObj())\n    })\n  },\n  clockIn: (id, obj, fn) => {\n    let url = `${baseURL}/clockin/${id}`;\n    axios.put(url,  obj, {\n      headers: {\n        'auth-token': JSON.parse(window.localStorage.data).token\n      }\n    }, getHeaderObj())\n    .then(data => {if(fn) fn()})\n    .catch(error => { console.log(error) });\n  },\n  startLunch: (id, obj, fn) => {\n    let url = `${baseURL}/startlunch/${id}`;\n    axios.put(url, obj, {\n      headers: {\n        'auth-token': JSON.parse(window.localStorage.data).token\n      }\n    }, getHeaderObj())\n    .then(data => {if(fn) fn()})\n    .catch(error => console.log(JSON.stringify(error)));\n  },\n  endLunch: (id, obj, fn) => {\n    let url = `${baseURL}/endlunch/${id}`;\n    axios.put(url, obj, {\n      headers: {\n        'auth-token': JSON.parse(window.localStorage.data).token\n      }\n    }, getHeaderObj())\n    .then(data => {if(fn) fn()})\n    .catch(error => console.log(JSON.stringify(error)));\n  },\n  clockOut: (id, obj, fn) => {\n    let url = `${baseURL}/clockout/${id}`;\n    axios.put(url, obj, {\n      headers: {\n        'auth-token': JSON.parse(window.localStorage.data).token\n      }\n    }, getHeaderObj())\n    .then(data => {if(fn) fn()})\n    .catch(error => console.log(error));\n  },\n  reset: async (id, fn) => {\n    const resetEmployee = await axios.put(`${baseURL}/reset/${id}`, {}, getHeaderObj());\n    const fetchEmployees = await axios.get(`${baseURL}/employees`);\n    fn(fetchEmployees);\n  },\n  updateEmployee: (id, laborType, jobNumber, fn) => {\n    let url = `${baseURL}/employees/`\n    const updates = {};\n    if(laborType.length){\n      updates.laborType = laborType\n    }\n    if(jobNumber){\n      updates.jobNumber = jobNumber\n    }\n    axios.put(url + id, updates, getHeaderObj()).then(response => fn());\n  },\n  fetchEmployees: async (dispatch) => {\n    const response = await axios.get(`${baseURL}/employees`, getHeaderObj());\n    dispatch({\n      type: Types.SET_EMPLOYEES,\n      payload: response.data\n    })\n  },\n  fetchLaborTypes: async (dispatch) => {\n    const response = await axios.get(`${baseURL}/labortypes`, getHeaderObj());\n    dispatch({\n      type: Types.SET_LABOR_TYPES,\n      payload: response.data\n    })\n  },\n  fetchJobNumbers: async (dispatch) => {\n    const response = await axios.get(`${baseURL}/jobs`, getHeaderObj());\n    dispatch({\n      type: Types.SET_JOB_NUMBERS,\n      payload: response.data\n    })\n  },\n  getCsvData: async (payload) => {\n    const {\n      dispatch,\n      startDate,\n      endDate\n    } = payload;\n    const response = await axios.post(`${baseURL}/history`, {\n      startDate: moment(startDate).format(\"YYYY-MM-DD\"),\n      endDate: moment(endDate).format(\"YYYY-MM-DD\")\n    }, getHeaderObj());\n    if(response.data.length){\n      dispatch({\n        type: Types.SET_CSV_DATA,\n        payload: {\n          data: response.data,\n          startDate: moment(startDate).format(\"YYYY-MM-DD\"),\n          endDate: moment(endDate).format(\"YYYY-MM-DD\")\n        }\n      })\n    } else {\n      dispatch({\n        type: Types.OPEN_MESSAGE,\n        payload: {\n          type: \"error\",\n          message: \"NO DATA FOR TIMEFRAME\"\n        }\n      })\n    }\n  },\n  logIn: async (username, password, fn) => {\n    const response = await axios.post(`${baseURL}/login`, {\n      username,\n      password\n    }, getHeaderObj());\n    if(response) fn(response);\n  },\n  getWeather: () => {\n    const apiKey = \"1001a1dcc738f2ecade5496fbf796f50\";\n    const cityId = \"4562144&APPID\";\n    const string = `http://api.openweathermap.org/data/2.5/forecast?id=${cityId}=${apiKey}`\n    axios.get(string).then(data => {\n    })\n  }\n};\n","import moment from \"moment\";\n\nexport default {\n\n  breakRefAndCopy: obj => (JSON.parse(JSON.stringify(obj))),\n\n  getTime: (field, data) => {\n    let time = (data[field] ? moment.utc(data[field]).local().format(\"hh:mm:ssA\") : 0);\n    return time;\n  },\n\n  getHeader: {\n    clockInTime: \"Clock In\",\n    clockOutTime: \"Clock Out\",\n    date: \"Date\",\n    endLunch: \"Lunch End\",\n    id: \"Id\",\n    isContractor: \"Is Contractor\",\n    jobNumber: \"Job #\",\n    laborType: \"Labor\",\n    lunchTime: \"Lunch Hrs\",\n    name: \"Employee\",\n    startLunch: \"Lunch Start\",\n    totalHrs: \"Hours Worked\",\n    overTime: \"Overtime Hrs\"\n  },\n\n  getTimeFromString: (time) => {\n    if(time === \"Invalid date\") return \"0\";\n    // const split = time.split(\":\");\n    // return `${split[0] || 0} hr : ${split[1] || 0} min : ${split[2] || 0} sec`;\n    return time;\n  }\n\n}\n","import moment from \"moment\";\nimport util from \"./util\";\n\nexport default {\n\n  breakRefAndCopy: obj => (JSON.parse(JSON.stringify(obj))),\n\n  getLaborType: state => {\n    if(state.selectedItems.laborTypes[0]) return state.selectedItems.laborTypes[0].name;\n    return state.selectedItems.employees[0].laborType\n  },\n\n  getJobNumber: state => {\n    if(state.selectedItems.jobNumbers[0]) return state.selectedItems.jobNumbers[0].number;\n    return state.selectedItems.employees[0].jobNumber\n  },\n  formatCSVData: (data) => {\n    const csvData = [];\n    data.forEach(data => {\n      const usedData = util.breakRefAndCopy(data)\n      delete usedData.createdAt;\n      delete usedData.updatedAt;\n      delete usedData.jobTitle;\n\n      usedData.date = moment(data.date).format(\"MM/DD/YYYY\");\n      usedData.clockInTime = util.getTime(\"clockInTime\", data);\n      usedData.clockOutTime = util.getTime(\"clockOutTime\", data);\n      usedData.endLunch = util.getTime(\"endLunch\", data);\n      usedData.startLunch = util.getTime(\"startLunch\", data);\n      usedData.lunchTime = usedData.lunchTime || \"no lunch taken\"\n      usedData.isContractor = data.isContractor ? \"Y\" : \"N\";\n\n      var end  = data.clockOutTime;\n      var start = data.clockInTime;\n      const difference = moment.utc(moment(end,\"DD/MM/YYYY HH:mm:ss\").diff(moment(start,\"DD/MM/YYYY HH:mm:ss\"))).format(\"HH:mm:ss\")\n\n      const timeInHours = (time) => {\n        const timeArray = time.split(\":\");\n        const hours = parseInt(timeArray[0]);\n        const minutes = parseInt(timeArray[1]);\n        const seconds = parseInt(timeArray[2]);\n        const totalSeconds = (hours * 3600) + (minutes * 60) + seconds;\n        return totalSeconds / 3600;\n      }\n\n      const totalHoursWorked = timeInHours(difference);\n\n      usedData.totalHrs = data.totalHrs && util.getTimeFromString(data.totalHrs);\n      usedData.overTime = (totalHoursWorked > 8) ? parseFloat(totalHoursWorked - 8).toFixed(2) : 0;\n      usedData.lunchTime = data.lunchTime && util.getTimeFromString(data.lunchTime);\n\n      if(csvData.length === 0){\n        const headers = [];\n        const headersKeys = Object.keys(usedData);\n        headersKeys.forEach(data => {\n          const head = util.getHeader[data] || data;\n          headers.push(head)\n        })\n        csvData.push(headers)\n      }\n      const innerData = [];\n      for(let i in usedData){\n        innerData.push(usedData[i]);\n      }\n      csvData.push(innerData);\n    })\n    return csvData;\n  },\n\n  getDefaultLaborType: (isContractor, isTech) => {\n    if(isContractor) return \"WELDER\";\n    if(!isTech) return \"NONE\";\n  },\n\n  getDefaultJobNumber: (isContractor, isTech) => {\n    if(isContractor) return \"OTHER\";\n    if(!isTech) return \"NONE\";\n  },\n\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport TimeSheetContext from \"../../../Context/State\";\nimport Axios from \"../../../Axios\";\nimport Types from \"../../../Context/Types\";\nimport Util from \"../../../Util\";\n\nimport './TimeSheetOptions.css';\n\nfunction TimeSheetOptions(props) {\n\n  const {\n    isAdminMode,\n    dispatch,\n    selectedItems\n  } = useContext(TimeSheetContext);\n\n  const {\n    title,\n    options,\n    name,\n    route,\n    field,\n    selectedItemType,\n    type\n  } = props;\n\n  const selectItem = (data) => {\n    const selected = Util.breakRefAndCopy(selectedItems);\n    const selectedIds = selectedItems[selectedItemType].map(data => data.id);\n\n    if(selectedIds.includes(data.id)){\n      const index = selectedIds.indexOf(data.id);\n      selected[selectedItemType].splice(index, 1);\n    } else {\n      if(isAdminMode){\n        selected[selectedItemType].push(data)\n      } else {\n        selected[selectedItemType] = [data];\n      }\n    }\n    dispatch({\n      type: Types.SET_SELECTED_ITEMS,\n      payload: selected\n    })\n  }\n\n  const [inputValue, setInputValue] = useState(null);\n\n  const activeButtons = [];\n  const deactivatedButtons = [];\n  options.forEach(data => (data.isActive) ? activeButtons.push(data) : deactivatedButtons.push(data));\n\n  return (<div className=\"timeSheetSideOptions flex\">\n    <div className=\"sideOptionHeading sectionHeading flex\">\n      {isAdminMode ?\n        <input\n          className=\"addInput tag\"\n          placeholder={`add ${title}`}\n          value={inputValue}\n          style={{\n            fontWeight: 400\n          }}\n          onChange={e => {\n            setInputValue(e.target.value);\n          }}\n          onKeyPress={e => {\n            if(e.key === \"Enter\" && inputValue.trim().length){\n              Axios.post(route, {\n                [field]: inputValue.toUpperCase(),\n                isActive: true\n              }, () => {\n                setInputValue(\"\");\n                Axios.fetchLaborTypes(dispatch);\n                Axios.fetchJobNumbers(dispatch);\n              })\n            }\n          }}/> :\n        <p className=\"timesheetTitle\">{title}</p>\n      }\n    </div>\n    <div className=\"sideOptionBody flex\">\n      {activeButtons.map((data, index) => {\n\n        const adminClass = isAdminMode && \"activeClass\";\n        const selectedIds = selectedItems[name].map(data => data.id);\n        const isSelected = selectedIds.includes(data.id);\n\n        const className = `tag tagLabel ${adminClass} ${isSelected && \"selected\"}`;\n\n        return (<div key={index}>\n          <div\n            onClick={() => selectItem(data) }\n            className={className}>\n            {data[field]}\n          </div>\n        </div>)})}\n      {isAdminMode && deactivatedButtons.map((data, index) => {\n\n        const adminClass = isAdminMode && \"activeClass\";\n        const selectedIds = selectedItems[name].map(data => data.id);\n        const isSelected = selectedIds.includes(data.id);\n        const className = `tag tagLabel ${adminClass} ${isSelected && \"selected\"} deactivatedClass`;\n\n        return (<div key={index}>\n          <div\n            onClick={() => selectItem(data) }\n            className={className}>\n            {data[field]}\n          </div>\n        </div>)})}\n    </div>\n  </div>);\n}\n\nexport default TimeSheetOptions;\n","import React from \"react\";\n\nconst Toogle = (props) => {\n\n  const {\n    isOn,\n    onClick,\n    offStlyes,\n    onStlyes,\n    parentStlyes,\n    text,\n    textStlyes\n  } = props;\n\n  return (<div style={parentStlyes} onClick={onClick}>\n    {isOn ? <i style={onStlyes} className=\"fas fa-toggle-on\"></i> :\n            <i style={offStlyes} className=\"fas fa-toggle-off\"></i>}\n    <p style={textStlyes} className=\"topBarText\">{text}</p>\n  </div>)\n}\n\nexport default Toogle;\n","import React, { useState, useContext } from \"react\";\n\nimport { CSVLink } from \"react-csv\";\nimport DatePicker from  \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport TimeSheetContext from \"../../../Context/State\";\nimport Types from \"../../../Context/Types\";\n\nimport moment from \"moment\";\n\nexport default () => {\n\n  const {\n    dispatch,\n    csvData\n  } = useContext(TimeSheetContext);\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const closeDatePicker = () => {\n    dispatch({\n      type: Types.TOGGLE_DOWNLOAD_SCREEN,\n      payload: false\n    })\n  }\n\n  const requestData = () => {\n    dispatch({\n      type: Types.CLEAR_CSV_DATA\n    })\n    dispatch({\n      type: Types.GET_CSV_DATA,\n      payload: {\n        startDate,\n        endDate,\n        dispatch\n      }\n    })\n  }\n\n  const ExampleCustomInput = ({ value, onClick }) => (\n    <button\n      style={{\n        backgroundColor: \"transparent\",\n        fontWeight: 400,\n        border: \"1px solid transparent\"\n      }}\n      onClick={onClick}>\n      {value}\n    </button>\n  );\n\n  return (\n    <div style={styles.parent}>\n      <div\n        onClick={closeDatePicker}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          position: \"absolute\"\n        }}></div>\n      <div style={styles.container}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"flex-end\",\n            width: \"100%\",\n            height: \"40%\",\n            backgroundColor: \"#008280\"\n          }}\n        >\n          <p\n            style={{\n              textAlign: \"center\",\n              color: \"#fff\",\n              fontSize: \"1.4rem\",\n              fontWeight: 300,\n              margin: 0,\n              marginBottom: 8\n            }}\n          >SELECT START AND END DATES</p>\n        </div>\n\n        <div style={{height: \"60%\"}}>\n          <div className=\"flex\">\n            <div style={styles.button}>\n              <div>START</div>\n              <DatePicker\n                maxDate={new Date()}\n                selected={startDate}\n                onChange={date => {\n                  const isAfterEndDate = moment(date).diff(endDate, 'hours') > 0;\n                  if(isAfterEndDate){\n                    setEndDate(date);\n                  }\n                  setStartDate(date);\n                  dispatch({\n                    type: Types.CLEAR_CSV_DATA\n                  })\n                }}\n                selectsStart\n                startDate={startDate}\n                endDate={endDate}\n              />\n            </div>\n            <div style={styles.button}>\n              <div>END</div>\n              <DatePicker\n                maxDate={new Date()}\n                selected={endDate}\n                onChange={date => {\n                  setEndDate(date)\n                  dispatch({\n                    type: Types.CLEAR_CSV_DATA\n                  })\n                }}\n                selectsEnd\n                endDate={endDate}\n                minDate={startDate}\n              />\n            </div>\n          </div>\n\n          <div\n            className=\"flex\"\n            style={{\n              width: \"100%\"\n            }}\n          >\n            <div style={{margin: 8}}>\n              <div\n                className={`topBarButton flex ${startDate && endDate && \"active\"}`}\n                onClick={requestData}\n              >\n                <i class=\"fas fa-search\"></i>\n              </div>\n              <p className=\"topBarText\">search</p>\n            </div>\n            <CSVLink\n              data={csvData.data}\n              style={{textDecoration: \"none\"}}\n              filename={`Cummins Wagner Timesheet ${moment(csvData.startDate).format(\"MM/DD/YYYY\")} to ${moment(csvData.endDate).format(\"MM/DD/YYYY\")}.csv`}\n              onClick={() => csvData.data.length > 0}>\n              <div style={{margin: 8}}>\n                <div className={`topBarButton flex ${csvData.data.length && \"active\"}`}>\n                  <i class=\"fas fa-cloud-download-alt\"></i>\n                </div>\n                <p className=\"topBarText\" style={{color: \"#000\"}}>download</p>\n              </div>\n            </CSVLink>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  parent: {\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    top: 0,\n    left: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  container: {\n    position: \"absolute\",\n    height: \"24em\",\n    width: \"24em\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    borderRadius: 4\n  },\n  button: {\n    margin: 10,\n    marginBottom: 40\n  }\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport './TimeSheet.css';\n\nimport TimeSheetContext from \"../../Context/State\";\nimport TimeSheetOptions from \"./TimeSheetOptions\";\nimport Axios from \"../../Axios\";\nimport Toogle from \"./Toogle\";\nimport CSV from \"./CSV\";\nimport axios from \"axios\";\n\nimport Types from \"../../Context/Types\";\n\nfunction TimeSheet() {\n\n  const [jobNumberSearch, setJobNumberSearch] = useState(\"\");\n\n  useEffect(() => {\n    Axios.getWeather();\n  }, []);\n\n  const {\n    isAdminMode,\n    isAdminLoggedIn,\n    dispatch,\n    laborTypes,\n    jobNumbers,\n    selectedItems,\n    isDownloadScreen\n  } = useContext(TimeSheetContext);\n\n  useEffect(() => {\n    Axios.fetchLaborTypes(dispatch);\n    Axios.fetchJobNumbers(dispatch);\n  }, []);\n\n  const isArrayEmpty = (arr) => {\n    return arr.length === 0;\n  }\n\n  const topButtons = [\n    {\n      text: \"trash\",\n      icon: \"fas fa-trash-alt\",\n      isVisable: isAdminMode,\n      isActive: () => {\n        const hasEmployeeSelected = selectedItems.employees.length;\n        const hasLaborTypeSelected = selectedItems.laborTypes.length;\n        const hasJobNumberSelected = selectedItems.jobNumbers.length;\n        return hasEmployeeSelected || hasLaborTypeSelected || hasJobNumberSelected;\n      },\n      function: (isActive) => {\n        if(!isActive) return;\n        dispatch({\n          type: Types.OPEN_MESSAGE,\n          payload: {\n            type: \"warning\",\n            message: \"ARE YOU SURE?\"\n          }\n        })\n      }\n    },\n    {\n      text: \"deactivate\",\n      icon: \"fas fa-unlink\",\n      isVisable: isAdminMode,\n      isActive: () => {\n        const hasEmployeeSelected = selectedItems.employees.length;\n        const hasLaborTypeSelected = selectedItems.laborTypes.length;\n        const hasJobNumberSelected = selectedItems.jobNumbers.length;\n        return hasEmployeeSelected || hasLaborTypeSelected || hasJobNumberSelected;\n      },\n      function: (isActive) => {\n        if(!isActive) return;\n        dispatch({\n          type: Types.BULK_DEACTIVATE,\n          payload: {\n            fn: () => {\n              Axios.fetchEmployees(dispatch)\n              Axios.fetchLaborTypes(dispatch);\n              Axios.fetchJobNumbers(dispatch);\n            }\n          },\n        })\n      }\n    },\n    {\n      text: \"activate\",\n      icon: \"fas fa-link\",\n      isVisable: isAdminMode,\n      isActive: () => {\n        const hasEmployeeSelected = selectedItems.employees.length;\n        const hasLaborTypeSelected = selectedItems.laborTypes.length;\n        const hasJobNumberSelected = selectedItems.jobNumbers.length;\n        return hasEmployeeSelected || hasLaborTypeSelected || hasJobNumberSelected;\n      },\n      function: (isActive) => {\n        if(!isActive) return;\n        dispatch({\n          type: Types.BULK_ACTIVATE,\n          payload: {\n            fn: () => {\n              Axios.fetchEmployees(dispatch)\n              Axios.fetchLaborTypes(dispatch);\n              Axios.fetchJobNumbers(dispatch);\n            }\n          },\n        })\n      }\n    },\n    {\n      text: \"clock in\",\n      icon: \"fas fa-clock\",\n      isVisable: !isAdminMode,\n      isActive: () => {\n        const isEmployeeSelected = selectedItems.employees[0];\n        const isContractor = isEmployeeSelected && selectedItems.employees[0].isContractor;\n        const isTech = isEmployeeSelected && selectedItems.employees[0].isTech;\n        const isLaborTypeSelected = selectedItems.laborTypes[0];\n        const isJobNuumberSelected = selectedItems.jobNumbers[0];\n        const isAlreadyClockedIn = isEmployeeSelected && selectedItems.employees[0].clockInTime;\n        const hasClockedIn = isEmployeeSelected && isEmployeeSelected.clockInTime;\n\n        if(isTech && !isAlreadyClockedIn && isJobNuumberSelected && isLaborTypeSelected){\n          return true;\n        } else if(isContractor && !isAlreadyClockedIn) {\n          return true;\n        } else if(!isTech && !isAlreadyClockedIn && isJobNuumberSelected) {\n          return true;\n        }\n      },\n      function: (isActive) => {\n        if(!isActive) return;\n        dispatch({\n          type: Types.CLOCK_IN,\n          payload: () => {\n            Axios.fetchEmployees(dispatch);\n            dispatch({\n              type: Types.OPEN_MESSAGE,\n              payload: {\n                type: \"confirmation\",\n                message: \"CONFIRMED!\"\n              }\n            })\n          }\n        })\n      }\n    },\n    {\n      text: \"to lunch\",\n      icon: \"fas fa-drumstick-bite\",\n      isVisable: !isAdminMode,\n      isActive: () => (selectedItems.employees[0] && !selectedItems.employees[0].startLunch && selectedItems.employees[0].clockInTime),\n      function: (isActive) => {\n        if(!isActive) return;\n        dispatch({\n          type: Types.GO_TO_LUNCH,\n          payload: () => {\n            Axios.fetchEmployees(dispatch)\n            dispatch({\n              type: Types.OPEN_MESSAGE,\n              payload: {\n                type: \"confirmation\",\n                message: \"CONFIRMED!\"\n              }\n            })\n          }\n        })\n      }\n    },\n    {\n      text: \"from lunch\",\n      icon: \"fas fa-bone\",\n      isVisable: !isAdminMode,\n      isActive: () => (selectedItems.employees[0] && !selectedItems.employees[0].endLunch && selectedItems.employees[0].startLunch),\n      function: (isActive) => {\n        if(!isActive) return;\n        dispatch({\n          type: Types.BACK_FROM_LUNCH,\n          payload: () => {\n            Axios.fetchEmployees(dispatch);\n            dispatch({\n              type: Types.OPEN_MESSAGE,\n              payload: {\n                type: \"confirmation\",\n                message: \"CONFIRMED!\"\n              }\n            })\n          }\n        })\n      }\n    },\n    {\n      text: \"clock out\",\n      icon: \"fas fa-clock\",\n      isVisable: !isAdminMode,\n      isActive: () => (selectedItems.employees[0] && !selectedItems.employees[0].clockOutTime && selectedItems.employees[0].clockInTime),\n      function: (isActive) => {\n        if(!isActive) return;\n        dispatch({\n          type: Types.CLOCK_OUT,\n          payload: () => {\n            Axios.reset(selectedItems.employees[0].id, (obj) => {\n              dispatch({\n                type: Types.OPEN_MESSAGE,\n                payload: {\n                  type: \"confirmation\",\n                  message: \"CONFIRMED!\"\n                }\n              });\n              dispatch({\n                type: Types.SET_EMPLOYEES,\n                payload: obj.data\n              });\n            });\n          }\n        })\n      }\n    }\n  ]\n\n  const onClickToggle = () => dispatch({ type: Types.TOGGLE_ADMIN_MODE });\n\n  const toggleButton = isAdminLoggedIn ? (<Toogle\n    onClick={onClickToggle}\n    parentStlyes={{ position: \"absolute\", top: \"1.4em\", right: \"1.4em\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\", width: \"6em\" }}\n    onStlyes={{ fontSize: \"2em\", color: \"#008280\", opacity: 0.6, textAlign: \"center\" }}\n    offStlyes={{ fontSize: \"2em\", color: \"#a7a7a7\", opacity: 0.6, textAlign: \"center\" }}\n    text=\"Edit\"\n    isOn={isAdminMode}\n  />) : null;\n\n  const isEmployeeSelected = selectedItems.employees[0];\n  const isTechSelected = isEmployeeSelected && selectedItems.employees[0].isTech;\n  const isContractorSelected = isEmployeeSelected && selectedItems.employees[0].isContractor;\n\n  const getHeaderObj = () => {\n    return {\n      headers: {\n        'auth-token': window.localStorage.token\n      }\n    }\n  }\n\n  return (<div id=\"timesheet\">\n    {toggleButton}\n\n    <div\n      className=\"flex\"\n      style={{\n        position: \"absolute\",\n        bottom: 0,\n        right: 0\n      }}\n    >\n      <div\n        className=\"selected flex\"\n        style={{\n          height: \"2.2em\",\n          width: \"2.2em\",\n          borderRadius: '0.2em',\n          backgroundColor: \"#008280\"\n        }}\n        onClick={() => {\n          const response = axios.post(\"https://dashboard-api-02.herokuapp.com/api/totaljobhrs\", {\n            jobNumber: jobNumberSearch\n          }, getHeaderObj()).then(data => {\n            const time = data.data;\n            setJobNumberSearch(time)\n          }).catch(e => setJobNumberSearch(\"job # not found\"));\n        }}\n        >\n        <i className=\"fas fa-hashtag sideIcon\"></i>\n      </div>\n      <input className=\"addInput tag\" value={jobNumberSearch} onChange={(e) => setJobNumberSearch(e.target.value)} />\n    </div>\n\n    <div id=\"middlePanelMiddle\" className=\"flex\">\n\n      {((isEmployeeSelected && !isContractorSelected) || isAdminMode) && <div className=\"middlePanelMiddleChild\">\n        <TimeSheetOptions\n          title=\"Job Number\"\n          options={jobNumbers}\n          name={\"jobNumbers\"}\n          route=\"jobs\"\n          field=\"number\"\n          selectedItemType=\"jobNumbers\"\n          type=\"jobNumber\"\n        />\n      </div>}\n\n      {(((isEmployeeSelected && !isContractorSelected) && (isEmployeeSelected && isTechSelected)) || isAdminMode) && <div className=\"middlePanelMiddleChild\">\n        <TimeSheetOptions\n          title=\"Labor Type\"\n          options={laborTypes}\n          name={\"laborTypes\"}\n          route=\"labortypes\"\n          field=\"name\"\n          selectedItemType=\"laborTypes\"\n          type=\"laborType\"\n        />\n      </div>}\n\n    </div>\n\n    <div id=\"topbar\" className=\"flex\">\n      {topButtons.map((data, index) => {\n        if(!data.isVisable) return null;\n        const className = `topBarButton flex ${data.isActive() && \"active\"}`;\n        return (<div key={index} className=\"topBarButtonParent\">\n          <div\n            className={className}\n            onClick={() => data.function(data.isActive())}>\n            <i className={data.icon}></i>\n          </div>\n          <p className=\"topBarText\">{data.text}</p>\n        </div>)\n      })}\n    </div>\n\n    {isDownloadScreen && <CSV />}\n  </div>);\n}\n\nexport default TimeSheet;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport Types from \"../../Context/Types\";\n\nimport TimeSheetContext from \"../../Context/State\";\n\nconst Confirmation = () => {\n\n  const {\n    dispatch,\n    message\n  } = useContext(TimeSheetContext);\n\n  const [fadeStlye, setFadeStlye] = useState({\n    opacity: 0,\n    top: \"-5em\"\n  })\n\n  useEffect(() => {\n    setFadeStlye({\n      opacity: 1,\n      top: \"5em\"\n    })\n  }, [])\n\n  const confirm = () => {\n    setFadeStlye({\n      opacity: 0,\n      top: \"-5em\"\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: Types.CLOSE_MESSAGE,\n        payload: \"confirmation\"\n      })\n    }, 600);\n  }\n\n  return (<div style={{ ...styles.parent, ...fadeStlye }}>\n    <i style={styles.icon} className=\"fas fa-thumbs-up\"></i>\n    <p style={styles.text} >{`${message.confirmation.message || \"ALL SET!\"}`}</p>\n    <div\n      onClick={confirm}\n      style={styles.button}>ok</div>\n  </div>)\n}\n\nconst styles = {\n  parent: {\n    position: \"absolute\",\n    backgroundColor: \"#008280\",\n    top: \"10vh\",\n    left: \"40vw\",\n    height: \"14em\",\n    width: \"14em\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    transition: \"all 0.5s\"\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.4)\",\n    fontSize: \"4em\"\n  },\n  text: {\n    color: \"#eaeaea\",\n    fontSize: \"1em\",\n    fontWeight: 300\n  },\n  button: {\n    backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n    padding: \"0.8em 4em 0.8em 4em\",\n    color: \"#eaeaea\",\n    fontSize: \"1.4em\",\n    fontWeight: 300\n  }\n}\n\nexport default Confirmation;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport Types from \"../../Context/Types\";\n\nimport TimeSheetContext from \"../../Context/State\";\n\nconst Error = () => {\n\n  const {\n    dispatch,\n    message\n  } = useContext(TimeSheetContext);\n\n  const [fadeStlye, setFadeStlye] = useState({\n    opacity: 0,\n    top: \"-5em\"\n  })\n\n  useEffect(() => {\n    setFadeStlye({\n      opacity: 1,\n      top: \"5em\"\n    })\n  }, [])\n\n  const confirm = () => {\n    setFadeStlye({\n      opacity: 0,\n      top: \"-5em\"\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: Types.CLOSE_MESSAGE,\n        payload: \"error\"\n      })\n    }, 600);\n  }\n\n  return (<div style={{ ...styles.parent, ...fadeStlye }}>\n    <i style={styles.icon} className=\"fas fa-exclamation\"></i>\n    <p style={styles.text} >{`${message.error.message || \"ERROR\"}`}</p>\n    <div\n      onClick={confirm}\n      style={styles.button}>ok</div>\n  </div>)\n}\n\nconst styles = {\n  parent: {\n    position: \"absolute\",\n    backgroundColor: \"#b3a43e\",\n    top: \"10vh\",\n    left: \"40vw\",\n    height: \"14em\",\n    width: \"14em\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    transition: \"all 0.5s\"\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.4)\",\n    fontSize: \"4em\"\n  },\n  text: {\n    color: \"#eaeaea\",\n    fontSize: \"1em\",\n    fontWeight: 300\n  },\n  button: {\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    padding: \"0.8em 4em 0.8em 4em\",\n    color: \"#eaeaea\",\n    fontSize: \"1.4em\",\n    fontWeight: 300\n  }\n}\n\nexport default Error;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport Types from \"../../Context/Types\";\nimport Axios from \"../../Axios\";\n\nimport TimeSheetContext from \"../../Context/State\";\n\nconst Warning = () => {\n\n  const {\n    dispatch,\n    message\n  } = useContext(TimeSheetContext);\n\n  const [fadeStlye, setFadeStlye] = useState({\n    opacity: 0,\n    top: \"-5em\"\n  })\n\n  useEffect(() => {\n    setFadeStlye({\n      opacity: 1,\n      top: \"5em\"\n    })\n  }, [])\n\n  const confirm = (yes) => {\n    setFadeStlye({\n      opacity: 0,\n      top: \"-5em\"\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: Types.CLOSE_MESSAGE,\n        payload: \"warning\"\n      })\n    }, 600);\n\n    dispatch({\n      type: Types.BULK_DELETE,\n      payload: {\n        fn: () => {\n          Axios.fetchEmployees(dispatch)\n          Axios.fetchLaborTypes(dispatch);\n          Axios.fetchJobNumbers(dispatch);\n        }\n      },\n    })\n  }\n\n  const cancel = (yes) => {\n    setFadeStlye({\n      opacity: 0,\n      top: \"-5em\"\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: Types.CLOSE_MESSAGE,\n        payload: \"warning\"\n      })\n    }, 600);\n  }\n\n  return (<div style={{ ...styles.parent, ...fadeStlye }}>\n    <i style={styles.icon} className=\"fas fa-hand-paper\"></i>\n    <p style={styles.text} >{`${message.warning.message || \"ARE YOU SURE?\"}`}</p>\n    <div style={styles.confirmBox}>\n      <div\n        onClick={confirm}\n        style={styles.button}>YES</div>\n      <div\n        onClick={cancel}\n        style={styles.button}>NO</div>\n    </div>\n  </div>)\n}\n\nconst styles = {\n  parent: {\n    position: \"absolute\",\n    backgroundColor: \"#FF6363\",\n    top: \"10vh\",\n    left: \"40vw\",\n    height: \"14em\",\n    width: \"14em\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    transition: \"all 0.5s\"\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.4)\",\n    fontSize: \"4em\"\n  },\n  text: {\n    color: \"#eaeaea\",\n    fontSize: \"1em\",\n    fontWeight: 300\n  },\n  confirmBox: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    width: \"80%\"\n  },\n  button: {\n    backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n    padding: \"0.8em 1em 0.8em 1em\",\n    color: \"#eaeaea\",\n    fontSize: \"1.4em\",\n    fontWeight: 300\n  }\n}\n\nexport default Warning;\n","import React, { useState, useEffect, useContext } from 'react';\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport TimeSheetContext from \"../Context/State\";\nimport Axios from \"../Axios\";\n\nimport Types from \"../Context/Types\";\nimport './DateTimeWeather.css';\n\nfunction DateTimeWeather() {\n\n  const [time, setTime] = useState(moment().format('MM/DD/YYYY HH:mm:ss'))\n  const [temp, setTemp] = useState(\"\")\n\n  useEffect(() => {\n    function update() {\n      setTime(moment().format('MM/DD/YYYY | HH:mm:ss'));\n    }\n    setInterval(update, 1000);\n    const apiKey = \"1001a1dcc738f2ecade5496fbf796f50\";\n    const cityId = \"4562144&APPID\";\n    const string = `https://api.openweathermap.org/data/2.5/forecast?id=${cityId}=${apiKey}`\n    axios.get(string).then(data => {\n      const K = data.data.list[0].main.temp;\n      const F = (K - 273.15) * (9/5) + 32;\n      setTemp(`${F.toFixed(2)} F`);\n    })\n  }, []);\n\n  const {\n    dispatch\n  } = useContext(TimeSheetContext);\n\n\n  return (<div id=\"dateTimeWeather\" className=\"flex\">\n    <p>{time} {` | ${temp}`}</p>\n  </div>);\n}\n\nexport default DateTimeWeather;\n","import React,  { useContext } from 'react';\nimport './MainPanel.css';\n\nimport TimeSheet from \"./TimeSheet\";\nimport Confirmation from \"./Confirmation\";\nimport Error from \"./Error\";\nimport Warning from \"./Warning\";\nimport TimeSheetContext from \"../Context/State\";\nimport DateTimeWeather from '../DateTimeWeather';\n\nfunction MainPanel() {\n\n  const {\n    message\n  } = useContext(TimeSheetContext);\n\n  return (<div id=\"middlePanel\" className=\"flex\">\n    <DateTimeWeather />\n    <div id=\"middlePanelLiner\">\n      <TimeSheet />\n      {message.confirmation.status && <Confirmation />}\n      {message.error.status && <Error />}\n      {message.warning.status && <Warning />}\n    </div>\n  </div>);\n}\n\nexport default MainPanel;\n","import React, { useContext } from 'react';\nimport './EmployeePanel.css';\n\nimport TimeSheetContext from \"../../Context/State\";\nimport Types from \"../../Context/Types\";\n\nimport Util from \"../../Util\";\n\nfunction EmployeePanelButtons(props) {\n\n  const {\n    editEmployee,\n    selectedItemType,\n    employee,\n    isDeactivated\n  } = props;\n\n  const {\n    dispatch,\n    selectedItems,\n    isAdminMode,\n    jobNumbers,\n    laborTypes\n  } = useContext(TimeSheetContext);\n\n  const addJobNumber = (selectedItems) => {\n    const jobNumber = employee.jobNumber;\n    jobNumbers.forEach(data => {\n      if(data.number === jobNumber){\n        selectedItems.jobNumbers = [data];\n      }\n    })\n  }\n\n  const addLaborTypes = (selectedItems) => {\n    const laborType = employee.laborType;\n    laborTypes.forEach(data => {\n      if(data.name === laborType){\n        selectedItems.laborTypes = [data];\n      }\n    })\n  }\n\n  const emptyJobNumber = (selectedItems) => selectedItems.jobNumbers = [];\n\n  const emptyLaborTypes = (selectedItems) => selectedItems.laborTypes = [];\n\n  const selectedEmployee = () => {\n    const selectedEmployees = Util.breakRefAndCopy(selectedItems);\n    const selectedIds = selectedItems.employees.map(data => data.id);\n\n    if(selectedIds.includes(employee.id)){\n      const index = selectedIds.indexOf(employee.id);\n      selectedEmployees[selectedItemType].splice(index, 1);\n    } else {\n      if(isAdminMode){\n        selectedEmployees[selectedItemType].push(employee)\n      } else {\n        selectedEmployees[selectedItemType] = [employee];\n      }\n    }\n\n    if(!isAdminMode){\n      employee.jobNumber ? addJobNumber(selectedEmployees) : emptyJobNumber(selectedEmployees);\n      employee.laborType ? addLaborTypes(selectedEmployees) : emptyLaborTypes(selectedEmployees);\n    }\n\n    dispatch({\n      type: Types.SET_SELECTED_ITEMS,\n      payload: selectedEmployees\n    })\n  }\n\n  const removeEmployee = () => {\n    const newSelectedItems = Util.breakRefAndCopy(selectedItems);\n    let index = null;\n    let jobNumberIndex = null;\n    let laborTypeIndex = null;\n    newSelectedItems.employees.forEach((data, i) => {\n      if(data.id === employee.id) index =  i;\n    });\n\n    if(!isAdminMode){\n      newSelectedItems.jobNumbers.forEach((data, i) => {\n        if(data.number === employee.jobNumber) jobNumberIndex =  i;\n      });\n      newSelectedItems.laborTypes.forEach((data, i) => {\n        if(data.name === employee.laborType) laborTypeIndex =  i;\n      });\n      newSelectedItems.jobNumbers.splice(jobNumberIndex, 1);\n      newSelectedItems.laborTypes.splice(laborTypeIndex, 1);\n    }\n    newSelectedItems.employees.splice(index, 1);\n    dispatch({\n      type: Types.SET_SELECTED_ITEMS,\n      payload: newSelectedItems\n    })\n  }\n\n  const click = () => (!selectedItems.employees.includes(employee)) ? selectedEmployee() : removeEmployee();\n\n  const selectedIds = [];\n  selectedItems.employees.forEach(data => {\n    selectedIds.push(data.id)\n  })\n\n  const isSelected = selectedIds.includes(employee.id);\n  const className = `employeeButton flex ${isSelected && \"selected\"}`;\n\n  const iconStlye = {\n    fontSize: \"2em\",\n    color: \"#008280\"\n  }\n\n  let iconClass = \"fas fa-pen-square\";\n  if(!isAdminMode){\n    if(employee.isTech){\n      iconClass = \"fas fa-wrench\";\n    } else if(employee.isContractor) {\n      iconClass = \"fas fa-id-card-alt\";\n    } else {\n      iconClass = \"fas fa-user-tie\";\n    }\n  }\n\n  return (<div\n    className={className}\n    onClick={() => click()}>\n    <div className=\"sideButtonDescription flex\">\n      <div className=\"sideButtonDescriptionTop sectionHeading\">\n        <p className={`${isDeactivated && \"deactivatedEmployeeClass\"}`}>{employee.name}</p>\n      </div>\n      <div className=\"sideButtonDescriptionBottom sectionHeading\">\n        <p className={`${isDeactivated && \"deactivatedEmployeeClass\"}`}>{employee.jobTitle}</p>\n      </div>\n    </div>\n    <div onClick={() => editEmployee(employee)}>\n        <i style={iconStlye} className={iconClass}></i>\n    </div>\n  </div>);\n}\n\nexport default EmployeePanelButtons;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Axios from \"../Axios\";\n\nimport './RightPanel.css';\n\nimport TimeSheetContext from \"../Context/State\";\nimport EmployeePanelButtons from \"./EmployeePanelButtons\";\nimport Types from \"../Context/Types\";\nimport Util from \"../Util\";\nimport logo from \"../img/cwlogo.png\"\n\nfunction EmployeePanel() {\n\n  const [fullName, setFullName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [travelTime, setTravelTime] = useState(0);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    dispatch,\n    employees,\n    isAdminMode,\n    isContractor,\n    isTech\n  } = useContext(TimeSheetContext);\n\n  useEffect(() => {\n    Axios.fetchEmployees(dispatch);\n  }, []);\n\n  const editEmployee = data => {\n    setFullName(data.name);\n    setJobTitle(data.jobTitle);\n    setTravelTime(data.travelTime);\n    setIsEditing({ id: data.id });\n    dispatch({\n      type: Types.TOGGLE_IS_CONTRACTOR,\n      payload: data.isContractor\n    })\n    dispatch({\n      type: Types.TOGGLE_IS_TECH,\n      payload: data.isTech\n    })\n  }\n\n  const resetInputs = () => {\n    setFullName(\"\");\n    setJobTitle(\"\");\n    setTravelTime(0);\n  }\n\n  const edit = () => {\n    dispatch({\n      type: Types.UPDATE_EMPLOYEE,\n      payload: {\n        id: isEditing.id,\n        name: fullName.toUpperCase(),\n        jobTitle: jobTitle.toUpperCase(),\n        isContractor: isContractor,\n        isTech: isTech,\n        fn: () => Axios.fetchEmployees(dispatch)\n      }\n    })\n    setIsEditing(false);\n    resetInputs();\n  }\n\n  const add = () => {\n    Axios.post(\"employees\", {\n      jobTitle: jobTitle.toUpperCase(),\n      name: fullName.toUpperCase(),\n      isActive: true,\n      travelTime: parseInt(travelTime),\n      isContractor: isContractor,\n      isTech: isTech\n    }, obj => {\n      Axios.fetchEmployees(dispatch);\n    }, err => {\n      dispatch({\n        type: Types.OPEN_MESSAGE,\n        payload: {\n          type: \"error\",\n          message: err\n        }\n      })\n    });\n    resetInputs();\n  }\n\n  const activeButtons = [];\n  const deactivatedButtons = [];\n  employees.map(data => {\n    if(data.isActive){\n      activeButtons.push(data)\n    } else {\n      deactivatedButtons.push(data)\n    }\n  })\n\n  const submit = (e, buttonSubmit) => {\n    const enterKeyOrSubmitButtonPressed = ((e && e.key === \"Enter\") || buttonSubmit);\n    const fieldsEmpty = !fullName.trim().length || !jobTitle.trim().length;\n    if(enterKeyOrSubmitButtonPressed && !fieldsEmpty) isEditing ? edit() : add();\n  }\n\n  return (<div id=\"rightPanel\" className=\"flex\">\n    <img src={logo} style={{width: \"50%\", marginTop: 10, marginLeft: \"auto\", marginRight: \"auto\"}} />\n    <div className=\"sectionHeading\" onClick={() => isAdminMode && Axios.seed()}>\n      <p className=\"timesheetEmployeeSectionTitle\">employees</p>\n    </div>\n    {isAdminMode && <div className=\"employeeAdditionForm flex\">\n      <input\n        className=\"addInput tag\"\n        style={styles.input}\n        placeholder=\"Full Name\"\n        value={fullName}\n        onChange={e => setFullName(e.target.value)}\n        onKeyPress={submit}/>\n      <input\n        className=\"addInput tag\"\n        style={styles.input}\n        placeholder=\"Job Title\"\n        value={jobTitle}\n        onChange={e => setJobTitle(e.target.value)}\n        onKeyPress={submit}/>\n      <input\n        className=\"addInput tag\"\n        style={styles.input}\n        placeholder=\"Travel Time\"\n        type=\"number\"\n        value={travelTime}\n        onChange={e => setTravelTime(e.target.value)}\n        onKeyPress={submit}/>\n      <div\n        className=\"flex\"\n        style={{\n          backgroundColor: \"#008280\",\n          width: \"90%\",\n          borderRadius: 4,\n          marginBottom: 10\n        }}\n        onClick={() => submit(null, true)}>\n        <p style={{margin: \"0.6em\"}}>SUBMIT</p>\n      </div>\n\n      <div\n        style={{\n          marginTop: 10,\n          marginBottom: 10\n        }}\n        className=\"flex\"\n        onClick={() => {\n          dispatch({\n            type: Types.TOGGLE_IS_CONTRACTOR,\n            payload: !isContractor\n          });\n        }}>\n        {isContractor ? <i style={{ fontSize: \"2em\", color: \"#008280\", opacity: 0.6, textAlign: \"center\" }} className=\"fas fa-toggle-on\"></i> :\n                <i style={{ fontSize: \"2em\", color: \"#a7a7a7\", opacity: 0.6, textAlign: \"center\" }} className=\"fas fa-toggle-off\"></i>}\n        <p style={{color: \"#fff\", marginLeft: 6}} className=\"topBarText\">CONTRACTOR</p>\n      </div>\n\n      <div\n        style={{\n          marginTop: 10,\n          marginBottom: 10\n        }}\n        className=\"flex\"\n        onClick={() => {\n          dispatch({\n            type: Types.TOGGLE_IS_TECH,\n            payload: !isTech\n          });\n        }}>\n        {isTech ? <i style={{ fontSize: \"2em\", color: \"#008280\", opacity: 0.6, textAlign: \"center\" }} className=\"fas fa-toggle-on\"></i> :\n                <i style={{ fontSize: \"2em\", color: \"#a7a7a7\", opacity: 0.6, textAlign: \"center\" }} className=\"fas fa-toggle-off\"></i>}\n        <p style={{color: \"#fff\", marginLeft: 6}} className=\"topBarText\">TECHNICIAN</p>\n      </div>\n\n    </div>}\n    <div id=\"rightPanelLiner\">\n      {employees && activeButtons.map((data, index) => {\n        return <EmployeePanelButtons\n          key={index}\n          editEmployee={editEmployee}\n          selectedItemType=\"employees\"\n          employee={data}\n          />\n      })}\n      {employees && isAdminMode && deactivatedButtons.map((data, index) => {\n        if(!data.isActive && !isAdminMode) return null;\n        return <EmployeePanelButtons\n          key={index}\n          editEmployee={editEmployee}\n          selectedItemType=\"employees\"\n          employee={data}\n          isDeactivated={true}\n          />\n      })}\n    </div>\n  </div>);\n}\n\nconst styles = {\n  input: {\n    fontWeight: 400,\n    border: \"none\",\n    borderRadius: 0\n  }\n}\n\nexport default EmployeePanel;\n","import React, { useState, useEffect, useContext } from 'react';\nimport TimeSheetContext from \"../Context/State\";\nimport Axios from \"../Axios\";\n\nimport Types from \"../Context/Types\";\nimport './LogInForm.css';\n\nfunction LogInForm() {\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const {\n    dispatch,\n    isAdminMode\n  } = useContext(TimeSheetContext);\n\n  useEffect(() => {\n    const data = window.localStorage.data;\n    if(data){\n      const obj = JSON.parse(data);\n      dispatch({\n        type: Types.LOG_IN,\n        payload: {\n          isLoggedIn: true,\n          data: obj\n        }\n      })\n    }\n  }, []);\n\n  const submitForm = () => {\n    if(username.trim().length && password.trim().length){\n      Axios.logIn(username, password, response => {\n        dispatch({\n          type: Types.LOG_IN,\n          payload: {\n            isLoggedIn: true,\n            data: response.data\n          }\n        })\n      })\n    }\n  }\n\n  return (<div id=\"logInForm\" className=\"flex\">\n    <div id=\"formBox\" className=\"flex\">\n      <input\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n        onKeyPress={e => {\n          if(e.key === \"Enter\") submitForm();\n        }}\n        placeholder=\"user name\"/>\n      <input\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        onKeyPress={e => {\n          if(e.key === \"Enter\") submitForm();\n        }}\n        placeholder=\"password\"/>\n      <button onClick={() => submitForm()}>log in</button>\n    </div>\n  </div>);\n}\n\nexport default LogInForm;\n","const initialState = {\n  isLoggedIn: false,\n  token: \"\",\n  isAdminMode: false,\n  isAdminLoggedIn: true,\n  isDownloadScreen: false,\n  isContractor: false,\n  isTech: true,\n  message: {\n    confirmation: {\n      status: false,\n      message: \"\"\n    },\n    error: {\n      status: false,\n      message: \"\"\n    },\n    warning: {\n      status: false,\n      message: \"\"\n    }\n  },\n  selectedItems: {\n    laborTypes: [],\n    jobNumbers: [],\n    employees: []\n  },\n  laborTypes: [],\n  jobNumbers: [],\n  employees: [],\n  csvData: {\n    data: [],\n    startDate: \"\",\n    endDate: \"\"\n  }\n};\n\nexport default initialState;\n","import Axios from \"../Axios\";\nimport initialState from \"./InitialState\";\n\n\nimport moment from \"moment\";\n\nimport Util from \"../Util\";\n\nexport default {\n\n  // SET\n  setSelectedItems: (payload, state) => ({ ...state, selectedItems: payload }),\n  setEmployees: (payload, state) =>  ({ ...state, employees: payload }),\n  setLaborTypes: (payload, state) => ({ ...state, laborTypes: payload }),\n  setJobNumbers: (payload, state) => ({ ...state, jobNumbers: payload }),\n\n  // CREATE\n  createEmployee: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    const { employees } = currentState;\n    employees.push({\n      id: (employees.length + 1),\n      ...payload\n    })\n    return {\n      ...state,\n      employees\n    };\n  },\n  createLaborType: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    const { laborTypes } = currentState;\n    if(laborTypes.indexOf(payload) === -1) laborTypes.push(payload.toUpperCase())\n    return {\n      ...state,\n      laborTypes\n    };\n  },\n  createJobNumber: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    const { jobNumbers } = currentState;\n    if(jobNumbers.indexOf(payload) === -1) jobNumbers.push(payload.toUpperCase())\n    return {\n      ...state,\n      jobNumbers\n    };\n  },\n\n  // DELETE\n  bulkDelete: (payload, state) => {\n    const map = {\n      employees: \"employees\",\n      laborTypes: \"labortypes\",\n      jobNumbers: \"jobs\"\n    }\n    for(let i in state.selectedItems){\n      if(state.selectedItems[i].length){\n        state.selectedItems[i].forEach(data => Axios.delete(`${map[i]}/${data.id}`, null, payload.fn))\n      }\n    }\n    return {\n      ...state,\n      selectedItems: Util.breakRefAndCopy(initialState.selectedItems)\n    };\n  },\n\n  // OTHER\n  clockIn: (payload, state) => {\n    const employeesId = state.selectedItems.employees[0].id;\n    const isContractor = state.selectedItems.employees[0].isContractor;\n    const isTech = state.selectedItems.employees[0].isTech;\n    const laborType = state.selectedItems.laborTypes[0] ? state.selectedItems.laborTypes[0].name : Util.getDefaultLaborType(isContractor, isTech);\n    const jobNumber = state.selectedItems.jobNumbers[0] ? state.selectedItems.jobNumbers[0].number : Util.getDefaultJobNumber(isContractor, isTech);\n    Axios.clockIn(employeesId, {\n      laborType,\n      jobNumber\n    }, payload);\n    return {\n      ...state,\n      selectedItems: Util.breakRefAndCopy(initialState.selectedItems)\n    }\n  },\n  clockOut: (payload, state) => {\n    const employeesId = state.selectedItems.employees[0].id;\n    const isContractor = state.selectedItems.employees[0].isContractor;\n    const isTech = state.selectedItems.employees[0].isTech;\n    const laborType = state.selectedItems.laborTypes[0] ? state.selectedItems.laborTypes[0].name : Util.getDefaultLaborType(isContractor, isTech);\n    const jobNumber = state.selectedItems.jobNumbers[0] ? state.selectedItems.jobNumbers[0].number : Util.getDefaultJobNumber(isContractor, isTech);\n    Axios.clockOut(employeesId, {\n      ...state.selectedItems.employees[0],\n      laborType,\n      jobNumber,\n      date: moment(new Date).format(\"YYYY/MM/DD\")\n    }, payload);\n    return {\n      ...state,\n      selectedItems: Util.breakRefAndCopy(initialState.selectedItems)\n    }\n  },\n  toLunch: (payload, state) => {\n    const employeesId = state.selectedItems.employees[0].id;\n    const isContractor = state.selectedItems.employees[0].isContractor;\n    const isTech = state.selectedItems.employees[0].isTech;\n    const laborType = state.selectedItems.laborTypes[0] ? state.selectedItems.laborTypes[0].name : Util.getDefaultLaborType(isContractor, isTech);\n    const jobNumber = state.selectedItems.jobNumbers[0] ? state.selectedItems.jobNumbers[0].number : Util.getDefaultJobNumber(isContractor, isTech);\n    Axios.startLunch(employeesId, {\n      laborType,\n      jobNumber,\n    }, payload);\n    return {\n      ...state,\n      selectedItems: Util.breakRefAndCopy(initialState.selectedItems)\n    }\n  },\n  fromLunch: (payload, state) => {\n    const employeesId = state.selectedItems.employees[0].id;\n    const isContractor = state.selectedItems.employees[0].isContractor;\n    const isTech = state.selectedItems.employees[0].isTech;\n    const laborType = state.selectedItems.laborTypes[0] ? state.selectedItems.laborTypes[0].name : Util.getDefaultLaborType(isContractor, isTech);\n    const jobNumber = state.selectedItems.jobNumbers[0] ? state.selectedItems.jobNumbers[0].number : Util.getDefaultJobNumber(isContractor, isTech);\n    Axios.endLunch(employeesId, {\n      laborType,\n      jobNumber,\n    }, payload);\n    return {\n      ...state,\n      selectedItems: Util.breakRefAndCopy(initialState.selectedItems)\n    }\n  },\n  bulkDeactivate: (payload, state) => {\n    const map = {\n      employees: \"employees\",\n      laborTypes: \"labortypes\",\n      jobNumbers: \"jobs\"\n    }\n    for(let i in state.selectedItems){\n      if(state.selectedItems[i].length){\n        state.selectedItems[i].forEach(data => Axios.put(`${map[i]}/${data.id}`, { isActive: false }, payload.fn))\n      }\n    }\n    return {\n      ...state,\n      selectedItems: Util.breakRefAndCopy(initialState.selectedItems)\n    }\n  },\n  bulkActivate: (payload, state) => {\n    const map = {\n      employees: \"employees\",\n      laborTypes: \"labortypes\",\n      jobNumbers: \"jobs\"\n    }\n    for(let i in state.selectedItems){\n      if(state.selectedItems[i].length){\n        state.selectedItems[i].forEach(data => Axios.put(`${map[i]}/${data.id}`, { isActive: true }, payload.fn))\n      }\n    }\n    return {\n      ...state,\n      selectedItems: Util.breakRefAndCopy(initialState.selectedItems)\n    };\n  },\n  updateEmployee: (payload, state) => {\n    const {\n      name,\n      jobTitle,\n      id,\n      isContractor,\n      fn\n    } = payload;\n    Axios.put(`employees/${id}`, {\n      name,\n      jobTitle,\n      isContractor\n    }, data => fn(data))\n    return state;\n  },\n  toggleAdminMode: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    currentState.isAdminMode = !currentState.isAdminMode;\n    return {\n      ...state,\n      isAdminMode: currentState.isAdminMode,\n      clickedTypes: [],\n      selectedItems: {\n        laborTypes: [],\n        jobNumbers: [],\n        employees: []\n      },\n      isContractor: false\n    };\n  },\n  openMessage: (payload, state) => {\n    const newMessage = Util.breakRefAndCopy(state.message);\n    newMessage[payload.type].status = true;\n    newMessage[payload.type].message = payload.message;\n    return {\n      ...state,\n      message: newMessage\n    }\n  },\n  closeMessage: (payload, state) => {\n    const newMessage = Util.breakRefAndCopy(state.message);\n    newMessage[payload].status = false;\n    newMessage[payload].message = \"\";\n    return {\n      ...state,\n      message: newMessage\n    }\n  },\n  toggleDownloadScreen: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    currentState.isDownloadScreen = payload;\n    return {\n      ...state,\n      isDownloadScreen: currentState.isDownloadScreen\n    }\n  },\n  toggleIsContractor: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    currentState.isContractor = payload;\n    return {\n      ...state,\n      isContractor: currentState.isContractor\n    }\n  },\n  toggleIsTech: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    currentState.isTech = payload;\n    return {\n      ...state,\n      isTech: currentState.isTech\n    }\n  },\n  clearCSVData: (payload, state) => {\n    return {\n      ...state,\n      csvData: {\n        data: [],\n        startDate: \"\",\n        endDate: \"\"\n      }\n    }\n  },\n  getCSVData: (payload, state) => {\n    Axios.getCsvData(payload);\n    return state\n  },\n  setCSVData: (payload, state) => {\n    const { data, startDate, endDate } = payload;\n    return {\n      ...state,\n      csvData: {\n        data: Util.formatCSVData(data),\n        startDate,\n        endDate\n      }\n    }\n  },\n  // src=\"https://openweathermap.org/img/wn/04d@2x.png\"\n  logIn: (payload, state) => {\n    const currentState = Util.breakRefAndCopy(state);\n    currentState.isLoggedIn = payload.data.isLoggedIn;\n    let token = (currentState.isLoggedIn) ? payload.data.token : \"\";\n    if(token === \"\" && window.localStorage.token){\n      token = JSON.parse(window.localStorage.token).token;\n    }\n    const isAdminLoggedIn = (token !== \"\") && payload.data.isAdmin;\n    window.localStorage.setItem('data', JSON.stringify(payload.data));\n    return {\n      ...state,\n      isLoggedIn: true,\n      token,\n      isAdminLoggedIn\n    }\n  }\n}\n","import Types from \"./Types\";\nimport StateFunctions from \"./StateFunctions\";\n\nexport default (state, action) => {\n  const { payload } = action;\n  console.table(action)\n\n  switch(action.type){\n    // SET\n    case Types.SET_SELECTED_ITEMS:\n      return StateFunctions.setSelectedItems(payload, state);\n    case Types.SET_EMPLOYEES:\n      return StateFunctions.setEmployees(payload, state);\n    case Types.SET_LABOR_TYPES:\n      return StateFunctions.setLaborTypes(payload, state);\n    case Types.SET_JOB_NUMBERS:\n      return StateFunctions.setJobNumbers(payload, state);\n\n    // CREATE\n    case Types.CREATE_EMPLOYEE:\n      return StateFunctions.createEmployee(payload, state);\n    case Types.CREATE_LABOR_TYPE:\n      return StateFunctions.createLaborType(payload, state);\n    case Types.CREATE_JOB_NUMBER:\n      return StateFunctions.createJobNumber(payload, state);\n\n    // DELETE\n    case Types.BULK_DELETE:\n      return StateFunctions.bulkDelete(payload, state);\n\n    // OTHER\n    case Types.CLOCK_IN:\n      return StateFunctions.clockIn(payload, state);\n    case Types.CLOCK_OUT:\n      return StateFunctions.clockOut(payload, state);\n    case Types.GO_TO_LUNCH:\n      return StateFunctions.toLunch(payload, state);\n    case Types.BACK_FROM_LUNCH:\n      return StateFunctions.fromLunch(payload, state);\n    case Types.BULK_DEACTIVATE:\n      return StateFunctions.bulkDeactivate(payload, state);\n    case Types.BULK_ACTIVATE:\n      return StateFunctions.bulkActivate(payload, state);\n    case Types.UPDATE_EMPLOYEE:\n      return StateFunctions.updateEmployee(payload, state);\n    case Types.TOGGLE_ADMIN_MODE:\n      return StateFunctions.toggleAdminMode(payload, state);\n    case Types.OPEN_MESSAGE:\n      return StateFunctions.openMessage(payload, state);\n    case Types.CLOSE_MESSAGE:\n      return StateFunctions.closeMessage(payload, state);\n    case Types.TOGGLE_DOWNLOAD_SCREEN:\n      return StateFunctions.toggleDownloadScreen(payload, state);\n    case Types.TOGGLE_IS_CONTRACTOR:\n      return StateFunctions.toggleIsContractor(payload, state);\n    case Types.TOGGLE_IS_TECH:\n      return StateFunctions.toggleIsTech(payload, state);\n    case Types.CLEAR_CSV_DATA:\n      return StateFunctions.clearCSVData(payload, state);\n    case Types.GET_CSV_DATA:\n      return StateFunctions.getCSVData(payload, state);\n    case Types.SET_CSV_DATA:\n      return StateFunctions.setCSVData(payload, state);\n    case Types.LOG_IN:\n      return StateFunctions.logIn(payload, state);\n\n    default:\n    return state;\n  }\n}\n","import React, { useEffect, useReducer } from 'react';\nimport Panel from './Panel';\nimport MainPanel from './MainPanel';\nimport EmployeePanel from './EmployeePanel';\nimport LogInForm from './LogInForm';\nimport { stringTypeAnnotation } from '@babel/types';\n\nimport TimeSheetContext from \"./Context/State\";\nimport Reducer from \"./Context/Reducer\";\nimport initialState from \"./Context/InitialState\";\n\nimport Types from \"./Context/Types\";\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  return (<TimeSheetContext.Provider value={{...state, dispatch}}>\n    <div id=\"dashboard\" className=\"flex\">\n      {!state.isLoggedIn && <LogInForm />}\n      {state.isLoggedIn && <Panel />}\n      {state.isLoggedIn && <EmployeePanel />}\n      {state.isLoggedIn && <MainPanel />}\n    </div>\n  </TimeSheetContext.Provider>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  debugger\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}